{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/student.reducer.js","redux/reducers/teacher.notes.reducer.js","redux/reducers/tempStudent.reducer.js","redux/reducers/assignment.reducer.js","redux/reducers/journal.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/login.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/student.list.saga.js","redux/sagas/teacher.notes.saga.js","redux/sagas/assignment.saga.js","redux/sagas/journal.saga.js","redux/sagas/_root.saga.js","components/LogOutButton/LogOutButton.js","redux/mapStoreToProps.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","components/StudentListItem/StudentListItem.js","components/StudentList/StudentList.js","components/TeacherHomePage/TeacherHomePage.js","components/CurrentAssignment/CurrentAssignment.js","components/StudentHomePage/StudentHomePage.js","pages/UserPage/UserPage.js","pages/InfoPage/InfoPage.js","components/RegisterForm/RegisterForm.js","pages/LandingPage/LandingPage.js","pages/RegisterPage/RegisterPage.js","components/AddStudentForm/AddStudentForm.js","pages/AddStudentPage/AddStudentPage.js","components/TeacherNote/TeacherNote.js","components/JournalTableItem/JournalTableItem.js","components/JournalTable/JournalTable.js","pages/StudentDetailsPage/StudentDetailsPage.js","components/FinishRegistrationForm/FinishRegistrationForm.js","pages/RegisterStudentPage/RegisterStudentPage.js","components/AddAssignmentForm/AddAssignmentForm.js","pages/AddAssignmentPage/AddAssignmentPage.js","pages/JournalPage/JournalPage.js","components/AddJournalForm/AddJournalForm.js","pages/AddJournalPage/AddJournalPage.js","pages/JournalDetailsPage/JournalDetailsPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","userReducer","payload","studentListReducer","studentDetailsReducer","notesReducer","tempStudentReducer","assignmentReducer","allJournalsReducer","journalItemNoteDetails","journalTaskItems","rootReducer","errors","user","student","teacherNote","tempStudent","assignment","journal","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerTeacher","registerStudent","getTempStudent","finishRegistrationStudent","registrationSaga","get","data","tempKey","fetchUser","userSaga","studentList","studentDetails","studentSaga","getNote","saveNote","updateNote","noteSaga","note","studentId","getAssignmentTeacher","getAssignmentStudent","saveAssignment","assignmentSaga","getAllJournals","getJournalsTeacher","journalNoteDetails","saveJournal","deleteJournalEntry","journalSaga","allJournals","journalId","assignmentId","date","notes","taskId","taskItemOneId","completeStatus","taskItemOneBool","taskItemTwoId","taskItemTwoBool","delete","rootSaga","all","connect","props","className","onClick","dispatch","mapStoreToProps","reduxState","store","loginLinkData","path","text","id","to","access_level_id","Footer","LoginForm","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","onSubmit","this","role","TextField","label","onChange","required","Box","mt","Button","variant","Component","withRouter","LoginPage","ComponentToShow","ComponentToProtect","component","authRedirect","otherProps","exact","from","StudentListItem","handleStudentClick","history","push","student_id","Card","CardContent","CardActionArea","profile_picture","src","process","alt","first_name","last_name","StudentList","Grid","container","spacing","justify","map","item","index","key","xs","TeacherHomePage","addStudentClick","Container","m","CurrentAssignment","task_item","teacher_notes","StudentHomePage","handleEditClick","Date","alignItems","instrument","UserPage","InfoPage","RegisterForm","firstName","lastName","email","phone","registerUser","LandingPage","heading","onLogin","onRegister","Swal","fire","title","showDenyButton","confirmButtonText","denyButtonTex","allowOutsideClick","then","result","isConfirmed","isDenied","RegisterPage","AddStudentForm","handleSubmit","icon","handleBackClick","mr","AddStudentPage","TeacherNote","displayEditField","handleAddClick","handleCancelClick","handleSaveClick","handleUpdateClick","multiline","rows","fullWidth","StyledTableRow","withStyles","theme","hover","backgroundColor","indigo","color","palette","common","white","TableRow","JournalTableItem","journalItemClick","journalItem","assignment_id","humanDate","DateTime","fromISO","toLocaleString","DATE_SHORT","TableCell","align","JournalTable","addJournalClick","mb","length","TableContainer","Table","TableHead","TableBody","StudentDetailsPage","addNewAssignmentClick","match","params","backBtnClick","studentToDisplay","FinishRegistrationForm","RegisterStudentPage","AddAssignmentForm","taskItemOne","taskItemTwo","teacherNotes","e","AddAssignmentPage","JournalPage","AddJournalForm","handleSelectChange","handleClickSubmit","FormControl","InputLabel","Select","MenuItem","AddJournalPage","JournalDetailsPage","handleDeleteClick","idArray","parseInt","complete_status","App","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c9e1f1ff.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return \"Oops! The username and password didn't match. Try again!\";\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    case 'REGISTRATION_FAILED_TEMP_STUDENT_NOT_AVAILABLE':\n      return 'NOT AVAILABLE';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","import { combineReducers } from 'redux';\n\nconst studentListReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_STUDENTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst studentDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_STUDENT_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  studentListReducer,\n  studentDetailsReducer,\n});\n","const notesReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_NOTE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;\n","const tempStudentReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_TEMP_STUDENT':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default tempStudentReducer;\n","const assignmentReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ASSIGNMENT':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default assignmentReducer;\n","import { combineReducers } from 'redux';\n\nconst allJournalsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ALL_JOURNALS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst journalItemNoteDetails = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_JOURNAL_NOTE_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst journalTaskItems = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_JOURNAL_TASK_ITEMS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  allJournalsReducer,\n  journalItemNoteDetails,\n  journalTaskItems,\n});\n","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport student from './student.reducer';\nimport teacherNote from './teacher.notes.reducer';\nimport tempStudent from './tempStudent.reducer';\nimport assignment from './assignment.reducer';\nimport journal from './journal.reducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  student,\n  teacherNote,\n  tempStudent,\n  assignment,\n  journal,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // TODO yield put that clears everything type: CLEAR_EVERYTHING --> each reducer has switch case to set state to default\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\n// handles \"REGISTER\" actions relating to teacher\nfunction* registerTeacher(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username, password, and other credentials from the payload to the server\n    yield axios.post('/api/user/register/teacher', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error with teacher registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\n// // handles \"REGISTER\" actions relating to student\nfunction* registerStudent(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the credentials of the added student from the payload to the server\n    yield axios.post('/api/user/register/student', action.payload);\n  } catch (error) {\n    console.log('Error with student registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* getTempStudent(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // get tempKey for the pre-registered student\n    const response = yield axios.get(\n      `/api/user/register/student/${action.payload}`\n    );\n    // dispatch to set temp student\n    yield put({\n      type: 'SET_TEMP_STUDENT',\n      payload: response.data,\n    });\n  } catch (error) {\n    console.log('Error getting tempKey:', error);\n    yield put({ type: 'REGISTRATION_FAILED_TEMP_STUDENT_NOT_AVAILABLE' });\n  }\n}\n\nfunction* finishRegistrationStudent(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the updated credentials of the student from the payload to the server\n    yield axios.put(\n      `/api/user/register/student/${action.payload.tempKey}`,\n      action.payload\n    );\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error finalizing student registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER_TEACHER', registerTeacher);\n  yield takeLatest('REGISTER_STUDENT', registerStudent);\n  yield takeLatest('GET_TEMP_STUDENT', getTempStudent);\n  yield takeLatest('FINISH_STUDENT_REG', finishRegistrationStudent);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// gets list of students for a teacher\nfunction* studentList() {\n  try {\n    const studentList = yield axios.get('/api/user/get-students');\n    yield put({\n      type: 'SET_STUDENTS',\n      payload: studentList.data,\n    });\n  } catch (error) {\n    console.log('Could not get student list!', error);\n  }\n}\n\nfunction* studentDetails(action) {\n  try {\n    const studentDetails = yield axios.get(\n      `/api/user/student-details/${action.payload}`\n    );\n    yield put({\n      type: 'SET_STUDENT_DETAILS',\n      payload: studentDetails.data,\n    });\n  } catch (error) {\n    console.log('Could not get student details!', error);\n  }\n}\n\nfunction* studentSaga() {\n  yield takeLatest('GET_STUDENTS', studentList);\n  yield takeLatest('GET_STUDENT_DETAILS', studentDetails);\n}\n\nexport default studentSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// gets teacher's note from DB\nfunction* getNote(action) {\n  try {\n    const note = yield axios.get(`/api/teacher-notes/${action.payload}`);\n    yield put({\n      type: 'SET_NOTE',\n      payload: note.data,\n    });\n  } catch (error) {\n    console.log('Could not get the note!', error);\n  }\n}\n\nfunction* saveNote(action) {\n  try {\n    yield axios.post('/api/teacher-notes', action.payload);\n    yield put({\n      type: 'GET_NOTE',\n      payload: action.payload.studentId,\n    });\n  } catch (error) {\n    console.log('Could not save the note!', error);\n  }\n}\n\nfunction* updateNote(action) {\n  try {\n    yield axios.put('/api/teacher-notes/', action.payload);\n    yield put({\n      type: 'GET_NOTE',\n      payload: action.payload.studentId,\n    });\n  } catch (error) {\n    console.log('Could not update the note!', error);\n  }\n}\n\nfunction* noteSaga() {\n  yield takeLatest('GET_NOTE', getNote);\n  yield takeLatest('SAVE_NOTE', saveNote);\n  yield takeLatest('UPDATE_NOTE', updateNote);\n}\n\nexport default noteSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* getAssignmentTeacher(action) {\n  try {\n    const assignment = yield axios.get(\n      `/api/assignment/student/${action.payload}`\n    );\n    yield put({\n      type: 'SET_ASSIGNMENT',\n      payload: assignment.data,\n    });\n  } catch (error) {\n    console.log('Could not get the assignment!', error);\n  }\n}\n\nfunction* getAssignmentStudent() {\n  try {\n    const assignment = yield axios.get('/api/assignment/student-page');\n    yield put({\n      type: 'SET_ASSIGNMENT',\n      payload: assignment.data,\n    });\n  } catch (error) {\n    console.log('Could not get the assignment!', error);\n  }\n}\n\nfunction* saveAssignment(action) {\n  try {\n    yield axios.post('/api/assignment', action.payload);\n  } catch (error) {\n    console.log('Could not save new assignment!', error);\n  }\n}\n\nfunction* assignmentSaga() {\n  yield takeLatest('GET_ASSIGNMENT_TEACHER', getAssignmentTeacher);\n  yield takeLatest('SAVE_ASSIGNMENT', saveAssignment);\n  yield takeLatest('GET_ASSIGNMENT_STUDENT', getAssignmentStudent);\n}\n\nexport default assignmentSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// gets all journal entries from DB for logged in student\nfunction* getAllJournals() {\n  try {\n    const allJournals = yield axios.get('/api/journal/get-all-journals');\n    yield put({\n      type: 'SET_ALL_JOURNALS',\n      payload: allJournals.data,\n    });\n  } catch (error) {\n    console.log('could not get all journals', error);\n  }\n}\n\n// gets all journals for teacher page\nfunction* getJournalsTeacher(action) {\n  try {\n    const allJournals = yield axios.get(\n      `/api/journal/teacher-get-all-journals/${action.payload}`\n    );\n    yield put({\n      type: 'SET_ALL_JOURNALS',\n      payload: allJournals.data,\n    });\n  } catch (error) {\n    console.log('could not get the journal log for this student', error);\n  }\n}\n\n// gets details for specific journal item from DB\nfunction* journalNoteDetails(action) {\n  try {\n    const journalNoteDetails = yield axios.get(\n      `/api/journal/get-note/${action.payload.journalId}`\n    );\n    yield put({\n      type: 'GET_JOURNAL_TASK_ITEMS',\n      payload: {\n        assignmentId: action.payload.assignmentId,\n        date: journalNoteDetails.data.date,\n      },\n    });\n    // console.log('JOURNAL DEEEEEEETS', journalNoteDetails);\n    yield put({\n      type: 'SET_JOURNAL_NOTE_DETAILS',\n      payload: journalNoteDetails.data,\n    });\n  } catch (error) {\n    console.log('Could not get journal note details!', error);\n  }\n}\n\n// gets task items for specific journal item from DB\nfunction* journalTaskItems(action) {\n  try {\n    const journalTaskItems = yield axios.get(\n      `/api/journal/get-task/${action.payload.assignmentId}/${action.payload.date}`\n    );\n    // console.log('JOURNAL Task', journalTaskItems);\n    yield put({\n      type: 'SET_JOURNAL_TASK_ITEMS',\n      payload: journalTaskItems.data,\n    });\n  } catch (error) {\n    console.log('Could not get journal task items', error);\n  }\n}\n\n// posts new journal item and calls to allJournals reducer\nfunction* saveJournal(action) {\n  try {\n    // first POST handles the student's note\n    yield axios.post('/api/journal/post-note', {\n      notes: action.payload.notes,\n      assignmentId: action.payload.assignmentId,\n    });\n    // second POST handles first task and complete status\n    yield axios.post('/api/journal/post-tasks', {\n      taskId: action.payload.taskItemOneId,\n      completeStatus: action.payload.taskItemOneBool,\n    });\n    // third POST handles second task and complete status\n    yield axios.post('/api/journal/post-tasks', {\n      taskId: action.payload.taskItemTwoId,\n      completeStatus: action.payload.taskItemTwoBool,\n    });\n  } catch (error) {\n    console.log('Could not save new journal entry!', error);\n  }\n}\n\nfunction* deleteJournalEntry(action) {\n  try {\n    // axios DELETE --> need to send payload in 'data object' !!\n    // axios.delete(url, { data: { foo: \"bar\" }, headers: { \"Authorization\": \"***\" } });\n    yield axios.delete('/api/journal/delete-journal-item', {\n      data: action.payload,\n    });\n  } catch (error) {\n    console.log('could not delete journal entry', error);\n  }\n}\n\nfunction* journalSaga() {\n  yield takeLatest('GET_ALL_JOURNALS', getAllJournals);\n  yield takeLatest('GET_JOURNAL_NOTE_DETAILS', journalNoteDetails);\n  yield takeLatest('GET_JOURNAL_TASK_ITEMS', journalTaskItems);\n  yield takeLatest('SUBMIT_JOURNAL_ENTRY', saveJournal);\n  yield takeLatest('DELETE_JOURNAL_ITEM', deleteJournalEntry);\n  yield takeLatest('GET_JOURNALS_TEACHER', getJournalsTeacher);\n}\n\nexport default journalSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './login.saga';\nimport registrationSaga from './registration.saga';\nimport userSaga from './user.saga';\nimport studentSaga from './student.list.saga';\nimport noteSaga from './teacher.notes.saga';\nimport assignmentSaga from './assignment.saga';\nimport journalSaga from './journal.saga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(), // login saga is now registered\n    registrationSaga(),\n    userSaga(),\n    studentSaga(),\n    noteSaga(),\n    assignmentSaga(),\n    journalSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = (props) => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","const mapStoreToProps = (reduxState) => {\n  return {\n    // reduxState properties bound to \"props.store\"\n    // ---------\n    store: reduxState,\n  };\n};\n\nexport default mapStoreToProps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: '/login',\n    text: 'Login',\n  };\n\n  if (props.store.user.id != null) {\n    loginLinkData.path = '/user';\n    loginLinkData.text = 'Home';\n  }\n\n  return (\n    <div className=\"nav\">\n      <Link to=\"/home\">\n        <h2 className=\"nav-title\">My Studio</h2>\n      </Link>\n      <div className=\"nav-right\">\n        <Link className=\"nav-link\" to={loginLinkData.path}>\n          {/* Show this link if they are logged in or not,\n          but call this link 'Home' if they are logged in,\n          and call this link 'Login / Register' if they are not */}\n          {loginLinkData.text}\n        </Link>\n        {props.store.user.access_level_id === 2 && (\n          <>\n            <Link className=\"nav-link\" to=\"/journal\">\n              Journal\n            </Link>\n          </>\n        )}\n        {/* Show the link to the info page and the logout button if the user is logged in */}\n        {props.store.user.id && (\n          <>\n            {/* <Link className=\"nav-link\" to=\"/info\">\n              Info Page\n            </Link> */}\n            <LogOutButton className=\"nav-link\" />\n          </>\n        )}\n        {/* Always show this link since the about page is not protected */}\n        {/*commented out for now. may add an about page later*/}\n        {/* <Link className=\"nav-link\" to=\"/about\">\n          About\n        </Link> */}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStoreToProps)(Nav);\n","import React from 'react';\nimport './Footer.css';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => <footer>&copy; Brad Loudis</footer>;\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL UI\nimport { Button, TextField, Box } from '@material-ui/core';\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.login}>\n        <h2>Login</h2>\n        {this.props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.loginMessage}\n          </h3>\n        )}\n        <div>\n          <TextField\n            label=\"username\"\n            value={this.state.username}\n            onChange={this.handleInputChangeFor('username')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"password\"\n            value={this.state.password}\n            type=\"password\"\n            onChange={this.handleInputChangeFor('password')}\n            required\n          />\n        </div>\n        <Box mt={2}>\n          <Button type=\"submit\" variant=\"contained\">\n            LOG IN\n          </Button>\n        </Box>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(LoginForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <div>\n        <LoginForm />\n\n        {/* <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/registration');\n            }}\n          >\n            Register\n          </button>\n        </center> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginPage);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LoginPage from '../../pages/LoginPage/LoginPage';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  );\n};\n\nexport default connect(mapStoreToProps)(ProtectedRoute);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL-UI\nimport { Card, CardActionArea, CardContent, Box } from '@material-ui/core';\n\nclass StudentListItem extends Component {\n  handleStudentClick = () => {\n    // console.log('student click!', this.props.student.student_id);\n    this.props.history.push(\n      `/student-details/${this.props.student.student_id}`\n    );\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardContent>\n          <CardActionArea onClick={this.handleStudentClick}>\n            {this.props.student.profile_picture ? (\n              <img\n                src={\n                  process.env.PUBLIC_URL +\n                  `${this.props.student.profile_picture}`\n                }\n                alt=\"not found\"\n                className=\"profilePicture\"\n              />\n            ) : (\n              <img\n                src={process.env.PUBLIC_URL + '/blank-profile-picture.png'}\n                alt=\"not found\"\n                className=\"profilePicture\"\n              />\n            )}\n\n            <h4>\n              {this.props.student.first_name} {this.props.student.last_name}\n            </h4>\n          </CardActionArea>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withRouter(StudentListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport StudentListItem from '../StudentListItem/StudentListItem';\n\n// MATERIAL-UI\nimport { Grid } from '@material-ui/core';\n\nclass StudentList extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_STUDENTS',\n    });\n  }\n\n  render() {\n    return (\n      <Grid container spacing={6} justify=\"flex-start\">\n        {this.props.store.student.studentListReducer.map((item, index) => {\n          return (\n            <Grid item key={index} xs={4}>\n              <StudentListItem student={item} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(StudentList);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL UI\nimport { Button, Container, Box } from '@material-ui/core';\n\n// CUSTOM COMPONENTS\nimport StudentList from '../StudentList/StudentList';\n\nclass TeacherHomePage extends Component {\n  addStudentClick = () => {\n    console.log('add student clicked');\n    this.props.history.push('/add-student');\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1>TEACHER</h1>\n        <h2>My Students</h2>\n\n        <Button variant=\"contained\" onClick={this.addStudentClick}>\n          ADD STUDENT\n        </Button>\n        <Box m={2}>\n          <StudentList />\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(TeacherHomePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass CurrentAssignment extends Component {\n  render() {\n    return (\n      <div className=\"formPanel\">\n        <h2>Current Assignment</h2>\n        {/* checking to see if there is an assignment before rendering to page */}\n        {this.props.store.assignment[0] != null && (\n          <div>\n            <h4>Tasks:</h4>\n            <ul>\n              <li>{this.props.store.assignment[0].task_item}</li>\n              <li>{this.props.store.assignment[1].task_item}</li>\n            </ul>\n            <h4>Notes:</h4>\n            <p>{this.props.store.assignment[1].teacher_notes}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(CurrentAssignment);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport CurrentAssignment from '../CurrentAssignment/CurrentAssignment';\n\n// MATERIAL UI\nimport { Button, Grid, Container, Box } from '@material-ui/core';\n\nclass StudentHomePage extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'GET_ASSIGNMENT_STUDENT' });\n  }\n\n  handleEditClick = () => {\n    console.log('edit btn click');\n    console.log(new Date());\n    // TODO AWS S3 upload profile picture\n  };\n\n  render() {\n    return (\n      <Container>\n        <Grid container justify=\"space-evenly\" alignItems=\"center\">\n          <Grid item xs={6}>\n            <Box>\n              <h1>STUDENT</h1>\n              <h2>\n                {this.props.store.user.first_name}{' '}\n                {this.props.store.user.last_name}\n              </h2>\n              <h3>{this.props.store.user.instrument}</h3>\n            </Box>\n            <Box>\n              {this.props.store.user.profile_picture ? (\n                <img\n                  src={\n                    process.env.PUBLIC_URL +\n                    `${this.props.store.user.profile_picture}`\n                  }\n                  alt=\"not found\"\n                  className=\"profilePicture\"\n                />\n              ) : (\n                <img\n                  src={process.env.PUBLIC_URL + '/blank-profile-picture.png'}\n                  alt=\"not found\"\n                  className=\"blankProfileImg\"\n                />\n              )}\n            </Box>\n            <Button variant=\"contained\" onClick={this.handleEditClick}>\n              EDIT\n            </Button>\n          </Grid>\n          <Grid item xs={6}>\n            <CurrentAssignment />\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(StudentHomePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import LogOutButton from '../LogOutButton/LogOutButton';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport TeacherHomePage from '../../components/TeacherHomePage/TeacherHomePage';\nimport StudentHomePage from '../../components/StudentHomePage/StudentHomePage';\n\nclass UserPage extends Component {\n  // this component doesn't do much to start, just renders some user info to the DOM\n  render() {\n    return (\n      <div>\n        {/* <h1 id=\"welcome\">Welcome, {this.props.store.user.username}!</h1>\n        <p>Your ID is: {this.props.store.user.id}</p>\n        <LogOutButton className=\"log-in\" /> */}\n        {this.props.store.user.access_level_id === 1 ? (\n          <TeacherHomePage />\n        ) : (\n          <StudentHomePage />\n        )}\n      </div>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStoreToProps)(UserPage);\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>Info Page</p>\n  </div>\n);\n\n// If you needed to add local state or other things,\n// you can make it a class component like:\n\n/*\nclass InfoPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <p>Info Page</p>\n      </div>\n    )\n  }\n}\n*/\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// MATERIAL UI\nimport { TextField, Button, Box } from '@material-ui/core';\n\nclass RegisterForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER_TEACHER',\n      payload: {\n        username: this.state.username,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        phone: this.state.phone,\n      },\n    });\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerUser}>\n        <h2>Teacher Registration</h2>\n        {this.props.store.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          <TextField\n            label=\"first name\"\n            value={this.state.firstName}\n            onChange={this.handleInputChangeFor('firstName')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"last name\"\n            value={this.state.lastName}\n            onChange={this.handleInputChangeFor('lastName')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"phone number\"\n            value={this.state.phone}\n            onChange={this.handleInputChangeFor('phone')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"email\"\n            value={this.state.email}\n            onChange={this.handleInputChangeFor('email')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"username\"\n            value={this.state.username}\n            onChange={this.handleInputChangeFor('username')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handleInputChangeFor('password')}\n            required\n          />\n        </div>\n        <div>\n          <Box mt={2}>\n            <Button type=\"submit\" variant=\"contained\">\n              SUBMIT\n            </Button>\n          </Box>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// SWEET ALERT\nimport Swal from 'sweetalert2';\n// MATERIAL UI\nimport { Button } from '@material-ui/core';\n\nimport './LandingPage.css';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\n\nclass LandingPage extends Component {\n  state = {\n    heading: 'Class Component',\n  };\n\n  onLogin = (event) => {\n    this.props.history.push('/login');\n  };\n\n  onRegister = () => {\n    Swal.fire({\n      title: 'Are you a teacher?',\n      showDenyButton: true,\n      confirmButtonText: 'Yes',\n      denyButtonTex: 'No',\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.props.history.push('/registration');\n      } else if (result.isDenied) {\n        Swal.fire(\n          'Please wait for an email from your teacher inviting you to register your account!'\n        );\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"grid-col grid-col_8\" className=\"formPanel\">\n            <p>\n              When teaching students it’s hard to stay organized and motivate\n              your students to keep up with consistent, daily practice. My\n              studio is an application with great organizational tools to help a\n              teacher keep track of their students and fun features that\n              encourage their students to keep working hard.\n            </p>\n\n            <p>\n              My Studio hopes to help simplify studio management for teachers\n              and sparks joy in the practice process for students.\n            </p>\n          </div>\n          <div className=\"grid-col grid-col_4\" className=\"formPanel\">\n            {/* <RegisterForm /> */}\n            <center>\n              <h4>Need an account?</h4>\n              <Button variant=\"contained\" onClick={this.onRegister}>\n                REGISTER\n              </Button>\n            </center>\n\n            <center>\n              <h4>Already a Member?</h4>\n              <Button variant=\"contained\" onClick={this.onLogin}>\n                LOGIN\n              </Button>\n            </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LandingPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  render() {\n    return (\n      <div>\n        <RegisterForm />\n\n        {/* <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/login');\n            }}\n          >\n            Login\n          </button>\n        </center> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// SWEET ALERT\nimport Swal from 'sweetalert2';\n// MATERIAL UI\nimport { Button, TextField, Box, Card, CardContent } from '@material-ui/core';\n\nclass AddStudentForm extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    username: '',\n    email: '',\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER_STUDENT',\n      payload: {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n      },\n    });\n\n    Swal.fire({\n      title: 'Success!',\n      text: `${this.state.firstName} has been successfully added to your studio and will receive an email to complete registration.`,\n      icon: 'success',\n      confirmButtonText: `Ok`,\n      allowOutsideClick: false,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.props.history.push('/user');\n      }\n    });\n  };\n\n  handleBackClick = () => {\n    this.props.history.push('/user');\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.handleSubmit}>\n        <h2>Add a Student!</h2>\n        <div>\n          <TextField\n            label=\"first name\"\n            value={this.state.firstName}\n            onChange={this.handleInputChangeFor('firstName')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"last name\"\n            value={this.state.lastName}\n            onChange={this.handleInputChangeFor('lastName')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"email\"\n            value={this.state.email}\n            onChange={this.handleInputChangeFor('email')}\n            required\n          />\n        </div>\n        <Box mt={2}>\n          <Box component=\"span\" mr={1}>\n            <Button variant=\"contained\" onClick={this.handleBackClick}>\n              BACK\n            </Button>\n          </Box>\n          <Button type=\"submit\" variant=\"contained\">\n            SUBMIT\n          </Button>\n        </Box>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect()(AddStudentForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport AddStudentForm from '../../components/AddStudentForm/AddStudentForm';\n\nclass AddStudentPage extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.store.user.access_level_id === 1 ? (\n          <AddStudentForm />\n        ) : (\n          <h1>Hey, you don't belong here!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(AddStudentPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// MATERIAL UI\nimport { Button, TextField, Box } from '@material-ui/core';\n\nclass TeacherNote extends Component {\n  state = {\n    displayEditField: false,\n    note: '',\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleAddClick = () => {\n    // toggle state to true. edit form will render on page\n    this.setState({\n      displayEditField: true,\n    });\n  };\n\n  handleEditClick = () => {\n    // toggle state to true. edit form will render on page\n    this.setState({\n      displayEditField: true,\n    });\n  };\n\n  handleCancelClick = () => {\n    // toggle state to false. teacher note will render on page\n    this.setState({\n      displayEditField: false,\n    });\n  };\n\n  handleSaveClick = () => {\n    // send a dispatch of the new note\n    this.props.dispatch({\n      type: 'SAVE_NOTE',\n      payload: {\n        studentId: this.props.studentId,\n        note: this.state.note,\n      },\n    });\n    // toggle state to false. teacher's note will render on page\n    this.setState({\n      displayEditField: false,\n    });\n  };\n\n  handleUpdateClick = () => {\n    // send a dispatch of the new note\n    this.props.dispatch({\n      type: 'UPDATE_NOTE',\n      payload: {\n        studentId: this.props.studentId,\n        note: this.state.note,\n      },\n    });\n    // toggle state to false. teacher's note will render on page\n    this.setState({\n      displayEditField: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"formPanel\">\n        <h2>Notes</h2>\n\n        {this.state.displayEditField ? (\n          <div>\n            <TextField\n              label={this.props.store.teacherNote.note}\n              multiline\n              rows={4}\n              fullWidth\n              value={this.state.note}\n              onChange={this.handleInputChangeFor('note')}\n            />\n            <Box mt={2}>\n              <Box component=\"span\" mr={1}>\n                <Button variant=\"contained\" onClick={this.handleCancelClick}>\n                  CANCEL\n                </Button>\n              </Box>\n              {this.props.store.teacherNote.note ? (\n                <Button variant=\"contained\" onClick={this.handleUpdateClick}>\n                  UPDATE\n                </Button>\n              ) : (\n                <Button variant=\"contained\" onClick={this.handleSaveClick}>\n                  SAVE\n                </Button>\n              )}\n            </Box>\n          </div>\n        ) : (\n          <div>\n            <p>{this.props.store.teacherNote.note}</p>\n            {this.props.store.teacherNote.note ? (\n              <Box mt={2}>\n                <Button variant=\"contained\" onClick={this.handleEditClick}>\n                  EDIT\n                </Button>\n              </Box>\n            ) : (\n              <Box mt={2}>\n                <Button variant=\"contained\" onClick={this.handleAddClick}>\n                  ADD\n                </Button>\n              </Box>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(TeacherNote);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL UI\nimport { TableRow, TableCell } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\n\n//import for date/time config\nimport { DateTime } from 'luxon';\n\nconst StyledTableRow = withStyles((theme) => ({\n  hover: {\n    backgroundColor: indigo,\n    color: theme.palette.common.white,\n  },\n}))(TableRow);\n\nclass JournalTableItem extends Component {\n  journalItemClick = () => {\n    console.log('journal item click', this.props.journalItem.id);\n    // push student to Journal Item Detail page\n    this.props.history.push(\n      `/journal-details/${this.props.journalItem.id}/${this.props.journalItem.assignment_id}`\n    );\n  };\n\n  render() {\n    const date = DateTime.fromISO(this.props.journalItem.date);\n    const humanDate = date.toLocaleString(DateTime.DATE_SHORT);\n    return (\n      <StyledTableRow onClick={this.journalItemClick}>\n        <TableCell align=\"center\">{humanDate}</TableCell>\n        <TableCell align=\"center\">{this.props.journalItem.notes}</TableCell>\n      </StyledTableRow>\n    );\n  }\n}\n\nexport default withRouter(JournalTableItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL UI\nimport {\n  Container,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button,\n  Box,\n} from '@material-ui/core';\n\n// CUSTOM COMPONENTS\nimport JournalTableItem from '../JournalTableItem/JournalTableItem';\n\nclass JournalTable extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_ALL_JOURNALS',\n    });\n  }\n\n  addJournalClick = () => {\n    this.props.history.push('/add-journal');\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1>Journal Page</h1>\n        <Box mb={2}>\n          {this.props.store.user.access_level_id === 2 && (\n            <Button variant=\"contained\" onClick={this.addJournalClick}>\n              ADD PRACTICE JOURNAL\n            </Button>\n          )}\n        </Box>\n        {this.props.store.journal.allJournalsReducer.length != 0 ? (\n          <TableContainer className=\"formPanel\">\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">\n                    <strong>Date</strong>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <strong>Entry</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.store.journal.allJournalsReducer.map(\n                  (item, index) => {\n                    return <JournalTableItem journalItem={item} key={index} />;\n                  }\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        ) : (\n          <h3>It looks like you don't have any journal entries yet!</h3>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(JournalTable));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL-UI\nimport { Container, Grid, Button } from '@material-ui/core';\n\n// CUSTOM COMPONENTS\nimport TeacherNote from '../../components/TeacherNote/TeacherNote';\nimport CurrentAssignment from '../../components/CurrentAssignment/CurrentAssignment';\nimport JournalTable from '../../components/JournalTable/JournalTable';\n\nclass StudentDetailsPage extends Component {\n  componentDidMount() {\n    // this is the id to send in dispatch to get the details for the individual student!\n    // console.log(this.props.match.params.id);\n    this.props.dispatch({\n      type: 'GET_STUDENT_DETAILS',\n      payload: this.props.match.params.id,\n    });\n\n    this.props.dispatch({\n      type: 'GET_NOTE',\n      payload: this.props.match.params.id,\n    });\n\n    this.props.dispatch({\n      type: 'GET_ASSIGNMENT_TEACHER',\n      payload: this.props.match.params.id,\n    });\n\n    this.props.dispatch({\n      type: 'GET_JOURNALS_TEACHER',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  addNewAssignmentClick = () => {\n    console.log('btn click. student id: ', this.props.match.params.id);\n    this.props.history.push(`/add-assignment/${this.props.match.params.id}`);\n  };\n\n  backBtnClick = () => {\n    this.props.history.push('/user');\n  };\n\n  render() {\n    const studentToDisplay = this.props.store.student.studentDetailsReducer;\n    return (\n      <Container>\n        <h1>STUDENT DETAILS</h1>\n        <Grid container>\n          <Grid item xs={4}>\n            {studentToDisplay.profile_picture ? (\n              <img\n                src={\n                  process.env.PUBLIC_URL + `${studentToDisplay.profile_picture}`\n                }\n                alt=\"not found\"\n                className=\"profilePicture\"\n              />\n            ) : (\n              <img\n                src={process.env.PUBLIC_URL + '/blank-profile-picture.png'}\n                alt=\"not found\"\n                className=\"profilePicture\"\n              />\n            )}\n            <p>\n              <strong>Student Name: </strong>\n              {studentToDisplay.first_name}\n            </p>\n            <p>\n              <strong>Instrument: </strong>\n              {studentToDisplay.instrument}\n            </p>\n            <Button variant=\"contained\" onClick={this.backBtnClick}>\n              BACK\n            </Button>\n          </Grid>\n          <Grid item xs={8}>\n            {/* <h2>Next Lesson:</h2> */}\n            <Grid container>\n              <Grid item xs={6}>\n                <CurrentAssignment />\n                <Button\n                  variant=\"contained\"\n                  onClick={this.addNewAssignmentClick}\n                >\n                  ADD NEW ASSIGNMENT\n                </Button>\n              </Grid>\n              <Grid item xs={6}>\n                <TeacherNote studentId={this.props.match.params.id} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <JournalTable />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(StudentDetailsPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// MATERIAL UI\nimport { TextField, Button } from '@material-ui/core';\n\nclass FinishRegistrationForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    instrument: '',\n    tempKey: this.props.tempKey,\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'FINISH_STUDENT_REG',\n      payload: this.state,\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerUser}>\n        <h2>\n          Welcome {this.props.store.tempStudent.first_name}{' '}\n          {this.props.store.tempStudent.last_name}!\n        </h2>\n        <p>Please finish registering with My Studio</p>\n        {this.props.store.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          <TextField\n            label=\"first name\"\n            value={this.state.firstName}\n            onChange={this.handleInputChangeFor('firstName')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"last name\"\n            value={this.state.lastName}\n            onChange={this.handleInputChangeFor('lastName')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"phone number\"\n            value={this.state.phone}\n            onChange={this.handleInputChangeFor('phone')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"email\"\n            value={this.state.email}\n            onChange={this.handleInputChangeFor('email')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"instrument\"\n            value={this.state.instrument}\n            onChange={this.handleInputChangeFor('instrument')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"username\"\n            value={this.state.username}\n            onChange={this.handleInputChangeFor('username')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handleInputChangeFor('password')}\n            required\n          />\n        </div>\n        <div>\n          <Button type=\"submit\" variant=\"contained\">\n            SUBMIT\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(FinishRegistrationForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport FinishRegistrationForm from '../../components/FinishRegistrationForm/FinishRegistrationForm';\n\n//  MATERIAL UI\nimport { Container } from '@material-ui/core';\n\nclass RegisterStudentPage extends Component {\n  componentDidMount() {\n    console.log(this.props.match.params.tempKey);\n    this.props.dispatch({\n      type: 'GET_TEMP_STUDENT',\n      payload: this.props.match.params.tempKey,\n    });\n  }\n  render() {\n    return (\n      <Container>\n        <h1>Finish Registration</h1>\n        {this.props.store.errors.registrationMessage !== 'NOT AVAILABLE' ? (\n          <FinishRegistrationForm tempKey={this.props.match.params.tempKey} />\n        ) : (\n          <p>Please contact system Admin.</p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterStudentPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL UI\nimport { Button, TextField, Box } from '@material-ui/core';\n\nclass AddAssignmentForm extends Component {\n  state = {\n    taskItemOne: '',\n    taskItemTwo: '',\n    teacherNotes: '',\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleBackClick = () => {\n    this.props.history.push(`/student-details/${this.props.studentId}`);\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.dispatch({\n      type: 'SAVE_ASSIGNMENT',\n      payload: {\n        taskItemOne: this.state.taskItemOne,\n        taskItemTwo: this.state.taskItemTwo,\n        teacherNotes: this.state.teacherNotes,\n        studentId: this.props.studentId,\n      },\n    });\n\n    // navigate Teacher back to the details page for this particular student\n    this.props.history.push(`/student-details/${this.props.studentId}`);\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.handleSubmit}>\n        <h2>Add Assignment!</h2>\n        <div>\n          <TextField\n            label=\"task one\"\n            value={this.state.taskItemOne}\n            fullWidth\n            onChange={this.handleInputChangeFor('taskItemOne')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"task two\"\n            value={this.state.taskItemTwo}\n            fullWidth\n            onChange={this.handleInputChangeFor('taskItemTwo')}\n            required\n          />\n        </div>\n        <div>\n          <TextField\n            label=\"notes\"\n            value={this.state.teacherNotes}\n            onChange={this.handleInputChangeFor('teacherNotes')}\n            multiline\n            rows={8}\n            fullWidth\n            required\n          />\n        </div>\n        <Box mt={2}>\n          <Box component=\"span\" mr={1}>\n            <Button variant=\"contained\" onClick={this.handleBackClick}>\n              BACK\n            </Button>\n          </Box>\n          <Button type=\"submit\" variant=\"contained\">\n            SUBMIT\n          </Button>\n        </Box>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect()(AddAssignmentForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport AddAssignmentForm from '../../components/AddAssignmentForm/AddAssignmentForm';\n\nclass AddAssignmentPage extends Component {\n  state = {\n    studentId: this.props.match.params.id,\n  };\n  render() {\n    return (\n      <div>\n        {this.props.store.user.access_level_id === 1 ? (\n          <AddAssignmentForm studentId={this.state.studentId} />\n        ) : (\n          <h1>Hey, you don't belong here!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(AddAssignmentPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport JournalTable from '../../components/JournalTable/JournalTable';\n\nclass JournalPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_ALL_JOURNALS',\n    });\n  }\n  render() {\n    return (\n      <div>\n        {this.props.store.user.access_level_id === 2 ? (\n          <JournalTable />\n        ) : (\n          <h1>Hey, you don't belong here!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(JournalPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\n// SWEET ALERT\nimport Swal from 'sweetalert2';\n// MATERIAL UI\nimport {\n  Button,\n  Container,\n  Grid,\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  TextField,\n} from '@material-ui/core';\n\nclass AddJournalForm extends Component {\n  state = {\n    taskItemOneBool: false,\n    taskItemTwoBool: false,\n    notes: '',\n  };\n\n  handleSelectChange = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  handleClickSubmit = () => {\n    this.props.dispatch({\n      type: 'SUBMIT_JOURNAL_ENTRY',\n      payload: {\n        ...this.state,\n        taskItemOneId: this.props.assignment[0].id,\n        taskItemTwoId: this.props.assignment[1].id,\n        assignmentId: this.props.assignment[0].assignment_id,\n      },\n    });\n    Swal.fire({\n      title: 'Nice!',\n      text: `Way to go ${this.props.store.user.first_name}!`,\n    });\n    this.props.history.push('/journal');\n  };\n\n  render() {\n    return (\n      <Container className=\"formPanel\">\n        <h2>JOURNAL FORM</h2>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={9}>\n                <p>\n                  <strong>Did you?</strong>\n                </p>\n                <p>\n                  {this.props.assignment[0] != null &&\n                    this.props.assignment[0].task_item}\n                </p>\n              </Grid>\n              <Grid item xs={3}>\n                <FormControl>\n                  <InputLabel>yes/no</InputLabel>\n                  <Select\n                    value={this.state.taskItemOneBool}\n                    onChange={this.handleSelectChange('taskItemOneBool')}\n                  >\n                    <MenuItem value={true}>yes</MenuItem>\n                    <MenuItem value={false}>no</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={9}>\n                <p>\n                  <strong>Did you?</strong>\n                </p>\n                <p>\n                  {this.props.assignment[1] != null &&\n                    this.props.assignment[1].task_item}\n                </p>\n              </Grid>\n              <Grid item xs={3}>\n                <FormControl>\n                  <InputLabel>yes/no</InputLabel>\n                  <Select\n                    value={this.state.taskItemTwoBool}\n                    onChange={this.handleSelectChange('taskItemTwoBool')}\n                  >\n                    <MenuItem value={true}>yes</MenuItem>\n                    <MenuItem value={false}>no</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={8}>\n            <TextField\n              label=\"note\"\n              multiline\n              rows={8}\n              fullWidth\n              value={this.state.notes}\n              onChange={this.handleInputChangeFor('notes')}\n            />\n          </Grid>\n        </Grid>\n        <Button variant=\"contained\" onClick={this.handleClickSubmit}>\n          SUBMIT\n        </Button>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(AddJournalForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\n// CUSTOM COMPONENTS\nimport CurrentAssignment from '../../components/CurrentAssignment/CurrentAssignment';\nimport AddJournalForm from '../../components/AddJournalForm/AddJournalForm';\n\n// MATERIAL UI\nimport { Container, Box, Grid, Button } from '@material-ui/core';\n\nclass AddJournalPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'GET_ASSIGNMENT_STUDENT' });\n  }\n\n  handleBackClick = () => {\n    this.props.history.push('/journal');\n  };\n  render() {\n    return (\n      <Container>\n        {this.props.store.user.access_level_id === 2 ? (\n          <Box>\n            <h1>Add Journal Entry</h1>\n            <Box mb={2}>\n              <Button variant=\"contained\" onClick={this.handleBackClick}>\n                BACK\n              </Button>\n            </Box>\n            <Grid container spacing={2}>\n              <Grid item xs={3}>\n                <CurrentAssignment />\n              </Grid>\n              <Grid item xs={9}>\n                <AddJournalForm assignment={this.props.store.assignment} />\n              </Grid>\n            </Grid>\n          </Box>\n        ) : (\n          <h1>Hey, you don't belong here!</h1>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(AddJournalPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\n// MATERIAL UI\nimport { Container, Box, Grid, Button } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nclass JournalDetailsPage extends Component {\n  componentDidMount() {\n    // this is the id to send in dispatch to get the details for the individual student!\n    // console.log(this.props.match.params.id);\n\n    // gets the student note and tasks for journal item\n    this.props.dispatch({\n      type: 'GET_JOURNAL_NOTE_DETAILS',\n      payload: {\n        journalId: this.props.match.params.id,\n        assignmentId: this.props.match.params.assignmentId,\n      },\n    });\n  }\n\n  handleBackClick = () => {\n    this.props.history.push('/journal');\n  };\n\n  handleDeleteClick = () => {\n    const idArray = [\n      parseInt(this.props.match.params.id),\n      this.props.store.journal.journalTaskItems[0].id,\n      this.props.store.journal.journalTaskItems[1].id,\n    ];\n    this.props.dispatch({\n      type: 'DELETE_JOURNAL_ITEM',\n      payload: idArray,\n    });\n    this.props.history.push('/journal');\n  };\n\n  render() {\n    return (\n      <Container>\n        <Grid container justify=\"space-evenly\">\n          <Grid item>\n            <h1>JournalDetailsPage</h1>\n            <Box mb={2}>\n              <Button variant=\"contained\" onClick={this.handleBackClick}>\n                BACK\n              </Button>\n            </Box>\n            <Box className=\"formPanel\">\n              <Grid container justify=\"space-evenly\">\n                <Grid item>\n                  {this.props.store.journal.journalTaskItems.map(\n                    (item, index) => {\n                      return (\n                        <div key={index}>\n                          <p>\n                            <strong>Task</strong>\n                          </p>\n                          <p>\n                            {item.task_item}\n                            <span>\n                              {item.complete_status ? (\n                                <DoneIcon></DoneIcon>\n                              ) : (\n                                <ClearIcon></ClearIcon>\n                              )}\n                            </span>\n                          </p>\n                        </div>\n                      );\n                    }\n                  )}\n                  <p>\n                    <strong>Notes</strong>\n                  </p>\n                  <p>{this.props.store.journal.journalItemNoteDetails.notes}</p>\n                </Grid>\n              </Grid>\n              <Box mt={3}>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Button>\n                      <EditIcon />\n                    </Button>\n                    <Button>\n                      <DeleteIcon onClick={this.handleDeleteClick} />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(JournalDetailsPage));\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\n// PAGES\n// -----------------\n// import AboutPage from '../../pages/AboutPage/AboutPage';\nimport UserPage from '../../pages/UserPage/UserPage';\nimport InfoPage from '../../pages/InfoPage/InfoPage';\nimport LandingPage from '../../pages/LandingPage/LandingPage';\nimport LoginPage from '../../pages/LoginPage/LoginPage';\nimport RegisterPage from '../../pages/RegisterPage/RegisterPage';\nimport AddStudentPage from '../../pages/AddStudentPage/AddStudentPage';\nimport StudentDetailsPage from '../../pages/StudentDetailsPage/StudentDetailsPage';\nimport RegisterStudentPage from '../../pages/RegisterStudentPage/RegisterStudentPage';\nimport AddAssignmentPage from '../../pages/AddAssignmentPage/AddAssignmentPage';\nimport JournalPage from '../../pages/JournalPage/JournalPage';\nimport AddJournalPage from '../../pages/AddJournalPage/AddJournalPage';\nimport JournalDetailsPage from '../../pages/JournalDetailsPage/JournalDetailsPage';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n\n            {/* Visiting localhost:3000/about will show the about page. */}\n            {/*commented out for now. may add an about page later*/}\n            {/* <Route\n              // shows AboutPage at all times (logged in or not)\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            /> */}\n\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the LoginPage (component).\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n            <ProtectedRoute\n              // logged in shows UserPage else shows LoginPage\n              exact\n              path=\"/user\"\n              component={UserPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows InfoPage else shows LoginPage\n              exact\n              path=\"/info\"\n              component={InfoPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows student details page else shows LoginPage\n              exact\n              path=\"/student-details/:id\"\n              component={StudentDetailsPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows AddStudentPage else shows LoginPage\n              exact\n              path=\"/add-student\"\n              component={AddStudentPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows AddAssignmentPage else shows LoginPage\n              exact\n              path=\"/add-assignment/:id\"\n              component={AddAssignmentPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows JournalPage else shows LoginPage\n              exact\n              path=\"/journal\"\n              component={JournalPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows journal item details page else shows LoginPage\n              exact\n              path=\"/journal-details/:id/:assignmentId\"\n              component={JournalDetailsPage}\n            />\n\n            <ProtectedRoute\n              // logged in shows AddJournalPage else shows LoginPage\n              exact\n              path=\"/add-journal\"\n              component={AddJournalPage}\n            />\n\n            {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows LoginPage at /login\n              exact\n              path=\"/login\"\n              component={LoginPage}\n              authRedirect=\"/user\"\n            />\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows RegisterPage at \"/registration\"\n              exact\n              path=\"/registration\"\n              component={RegisterPage}\n              authRedirect=\"/user\"\n            />\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows RegisterPage at \"/registration\"\n              exact\n              path=\"/register-student/:tempKey\"\n              component={RegisterStudentPage}\n              authRedirect=\"/user\"\n            />\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows LandingPage at \"/home\"\n              exact\n              path=\"/home\"\n              component={LandingPage}\n              authRedirect=\"/user\"\n            />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}